var hasDepType = function (packageJson) { return function (type) { return function (dep) {
    return typeof packageJson[type] === 'object' && Reflect.has(packageJson[type], dep);
}; }; };
export var hasPeerDep = function (packageJson) { return hasDepType(packageJson)('peerDependencies'); };
export var hasDep = function (packageJson) { return hasDepType(packageJson)('dependencies'); };
export var hasDevDep = function (packageJson) { return hasDepType(packageJson)('devDependencies'); };
export var hasOptDep = function (packageJson) { return hasDepType(packageJson)('optionalDependencies'); };
export var hasAnyDep = function (packageJson) { return function (dep) {
    return [hasDep, hasDevDep, hasPeerDep, hasOptDep].some(function (isDepExist) { return isDepExist(packageJson)(dep); });
}; };
export var ifAnyDep = function (packageJson) { return function (dep, t, f) {
    return hasAnyDep(packageJson)(dep) ? t === null || t === void 0 ? void 0 : t() : f === null || f === void 0 ? void 0 : f();
}; };
// eslint-disable-next-line @typescript-eslint/naming-convention
export var Packages = function (packageJson) { return ({
    hasOptDep: hasOptDep(packageJson),
    hasPeerDep: hasPeerDep(packageJson),
    hasDevDep: hasDevDep(packageJson),
    hasDep: hasDep(packageJson),
    hasAnyDep: hasAnyDep(packageJson),
    ifAnyDep: ifAnyDep(packageJson),
}); };
//# sourceMappingURL=package.js.map