/**
 * give NODE_ENV value or given fallback value
 * @param {string} [fallback="development"] fallback value if NODE_ENV is not present (default to "development")
 * @returns {string} NODE_ENV || fallback
 */
export declare const get: <T = string>(fallback?: string | T) => string | T;
/**
 * strict check NODE_ENV with given value
 * @param {string} value env string to check
 * @returns {boolean} is given env strict equal to NODE_ENV
 */
export declare const is: (value: string) => boolean;
/**
 * check NODE_ENV starts with given value (case insensitive)
 * @param {string} value env string to check
 * @returns {boolean} is given env starts with equal to NODE_ENV
 */
export declare function match(value: string): boolean;
/**
 * check env matchs 'development'
 * @returns {boolean} true if env matches "development"
 */
export declare const matchDev: () => boolean;
/**
 * check env matchs 'production'
 * @returns {boolean} true if env matches "production"
 */
export declare const matchProd: () => boolean;
/**
 * check env matchs 'test'
 * @returns {boolean} true if env matches "test"
 */
export declare const matchTest: () => boolean;
export declare const isDev: boolean;
export declare const isProd: boolean;
export declare const isTest: boolean;
