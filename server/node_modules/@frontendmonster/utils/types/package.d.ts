declare type PackageJson = Record<Dependencies, any>;
declare type Dependencies = 'peerDependencies' | 'devDependencies' | 'dependencies' | 'optionalDependencies';
export declare const hasPeerDep: (packageJson: PackageJson) => (dep: string) => boolean;
export declare const hasDep: (packageJson: PackageJson) => (dep: string) => boolean;
export declare const hasDevDep: (packageJson: PackageJson) => (dep: string) => boolean;
export declare const hasOptDep: (packageJson: PackageJson) => (dep: string) => boolean;
export declare const hasAnyDep: (packageJson: PackageJson) => (dep: string) => boolean;
export declare const ifAnyDep: (packageJson: PackageJson) => (dep: string, t?: Function | undefined, f?: Function | undefined) => any;
export declare const Packages: (packageJson: PackageJson) => {
    hasOptDep: (dep: string) => boolean;
    hasPeerDep: (dep: string) => boolean;
    hasDevDep: (dep: string) => boolean;
    hasDep: (dep: string) => boolean;
    hasAnyDep: (dep: string) => boolean;
    ifAnyDep: (dep: string, t?: Function | undefined, f?: Function | undefined) => any;
};
export {};
